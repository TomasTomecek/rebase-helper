[tox]
envlist=py2,py3

[pytest]
addopts=-m standard
markers=
    standard: mark a test as a standard test.
    functional: mark a test as a functional test.
    functional_long_running: mark a test as a long running functional test.
testpaths=rebasehelper/tests

[pycodestyle]
show-source=True
show-pep8=True
statistics=True
count=True
max-line-length=120
format=pylint

[testenv]
recreate=True
setenv=LANG=C.UTF-8
passenv=PYTEST_ADDOPTS
commands=
    {[lint]commands}
    py.test --verbose --color=yes \
            {posargs:--cov rebasehelper --cov-report html --cov-report term}
deps=
    -rtest-requirements.txt
    -rlint-requirements.txt

[testenv:py2]
basepython=python2

[testenv:py3]
basepython=python3

[lint]
skip_install=true
commands=
    pylint --rcfile=pylintrc \
           --disable=C,R,W \
           --disable=print-statement \
           --disable=parameter-unpacking \
           --disable=unpacking-in-except \
           --disable=old-raise-syntax \
           --disable=backtick \
           --disable=long-suffix \
           --disable=old-ne-operator \
           --disable=old-octal-literal \
           --disable=suppressed-message \
           --disable=useless-suppression \
           rebasehelper
deps=
    -rlint-requirements.txt

[testenv:lint-py2]
basepython=python2
skip_install={[lint]skip_install}
commands = {[lint]commands}
deps = {[lint]deps}

[testenv:lint-py3]
basepython=python3
skip_install={[lint]skip_install}
commands = {[lint]commands}
deps = {[lint]deps}
